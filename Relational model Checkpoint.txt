Converting an Entity-Relationship (ER) diagram to a relational schema involves transforming entities, attributes, and relationships into tables, columns, and constraints in a relational database. Here's a step-by-step guide to this process:

Entities to Tables:

Each entity in the ER diagram becomes a table in the relational schema.
Attributes of the entity become columns of the corresponding table.
Designate a primary key for each table, typically based on the entity's unique identifier.
Weak Entities:

Weak entities depend on other entities for their identification.
When converting, include a foreign key in the weak entity's table that references the primary key of the strong entity it depends on.
The primary key of the weak entity's table is usually a combination of its own unique attribute(s) and the foreign key.
Relationships:

One-to-One (1:1): Add a foreign key to one of the tables involved. The choice depends on the specific scenario and constraints.
One-to-Many (1:N): Add a foreign key to the table on the 'many' side, referencing the primary key of the 'one' side.
Many-to-Many (M:N): Create a new junction table to represent the relationship. This table includes foreign keys referencing the primary keys of the two related tables.
Attributes:

Composite Attributes: Break them down into their simplest components and create individual columns for each.
Multivalued Attributes: Create a separate table to store these attributes, including a foreign key that references the original entity's primary key.
Generalization and Specialization:

For hierarchies (like superclasses and subclasses), you can:
Option 1: Create separate tables for each entity, with the subclass tables including a foreign key referencing the superclass table.
Option 2: Use a single table for all entities in the hierarchy, including columns for all attributes and a discriminator column to identify the specific subclass.